/*!
 * angular-bootstrap-form-validation
 * https://github.com/assisrafael/angular-bootstrap-form-validation
 * @license MIT
 * v0.9.7
 */
"use strict";angular.module("ui.bootstrap.validation",[]).directive("uiValidationSubmit",["$parse",function(e){return{restrict:"A",require:["uiValidationSubmit","?form"],controller:[function(){this.attempted=!1,this.setAttempted=function(){this.attempted=!0}}],link:function(r,t,i,a){var n=a[0],o=a[1]||null,l=e(i.uiValidationSubmit);t.bind("submit",function(e){return n.setAttempted(),r.$$phase||r.$apply(),o.$valid?void r.$apply(function(){l(r,{$event:e})}):!1})}}}]).directive("uiValidationShowErrors",[function(){return{restrict:"A",require:["^form","^?uiValidationSubmit"],scope:{},link:function(e,r,t,i){if(!r.hasClass("form-group"))throw"ui-validation-show-errors element requires 'form-group' class";var a=i[0];if(!a)throw"ui-validation-show-errors requires a controller associated to this form";var n=i[1]||null,o=r[0].querySelector("input[name],select[name],textarea[name]");if(!o)throw"ui-validation-show-errors requires a child input/select/textarea element with a 'name' attribute";var l=a[o.name];e.$watch(function(){return l.$invalid&&(!n||n.attempted)},function(e){e?r.addClass("has-error"):r.removeClass("has-error")})}}}]).value("ErrorMessages",{email:"Invalid email",max:"Maximum value: ",maxlength:"Maximum length: ",min:"Minimum value: ",minlength:"Minimum length: ",required:"This field cannot be blank",unique:"This field does not allow duplicated values"}).directive("uiValidationErrorMessages",["ErrorMessages","$parse",function(e,r){var t=function(e){return e.replace(/^(x[\:\-_]|data[\:\-_]|ng[\:\-_])/i,"")};return{restrict:"AE",require:"^form",replace:!0,template:'<div class="ui-validation help-block" ng-show="fieldCtrl.$invalid">	<small ng-repeat="(errorType, errorValue) in fieldCtrl.$error" ng-show="fieldCtrl.$error[errorType]">{{errorMessages[errorType]}} <span ng-bind="{{errorType}}"></span></small></div>',scope:{},link:function(i,a,n,o){var l=a.parent(),u=l[0].querySelector("input[name],select[name],textarea[name]");if(!u)throw"ui-validation-error-messages requires a sibling input/select/textarea element with a 'name' attribute";var s=angular.element(u);i.fieldCtrl=o[u.name],angular.forEach(s[0].attributes,function(a){if(!/^(ng-required)/.test(a.name)){var n=t(a.name),o=a.nodeValue;if(e.hasOwnProperty(n)&&o.length>0){i[n]=o;var l=/^[A-Za-z]/.test(a.nodeValue);l&&(i[n]=r(o)(i.$parent),i.$parent.$watch(a.nodeValue,function(e){i[a.name]=e}))}}}),i.errorMessages=angular.copy(e)}}}]).directive("uiCustomErrorMessage",[function(){return{restrict:"E",replace:!0,link:function(){throw new Error("Not implemented yet!")}}}]);